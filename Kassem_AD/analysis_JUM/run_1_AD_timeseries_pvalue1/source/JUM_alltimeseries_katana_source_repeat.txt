#!/bin/bash

#PBS -N JUM_PGNEXUS_kassem_AD_alltimeseries_pvalue1
#PBS -l select=1:ncpus=8:mem=60gb
#PBS -l walltime=72:00:00
#PBS -j oe
#PBS -k eod
#PBS -o /home/z3463471/PGNEXUS_kassem_MSC/AD/analysis_JUM/run_1_AD_timeseries_pvalue1/results/
#PBS -M z3463471@ad.unsw.edu.au
#PBS -m ae

# language: timepoint = timepoint. replicate = technical replicate.

module load samtools/1.9
module load bedtools/2.27.1
module load R/3.6.1
module load perl/5.28.0

data_dir="/srv/scratch/z3463471/PGNEXUS_kassem_MSC/Kassem_AD/"

bam_bai_SJ_and_sam_files_dir="/srv/scratch/z3463471/PGNEXUS_kassem_MSC/Kassem_AD/bam_bai_sj_sam_files/"

# THIS CODE EXPECTS YOU TO HAVE PUT THE BAM BAI SJ SAM FILES INTO THE AFOREMENTIONED DIRECTORY BEFOREHAND
# NOTE: DO NOT EVER PUT BAM BAI SJ SAM FILES THAT YOU ARE NOT GOING TO ANALYSE INTO THE FOLDER. THE PROGRAMS IS REALLY DUMB AND WILL ATTEMPT TO PROCESS THAT ANYWAYS BUT FAIL MISERABLY
# expect that the bam bai sj sam files relevant to the analysis folder ONLY AND NOTHING ELSE is placed into this folder

refFlat_dir="/srv/scratch/z3463471/hg38_ensembl_reference/"
jum_package_dir="/home/z3463471/isoform_software/JUM_2.0.2/"
source_dir="/home/z3463471/PGNEXUS_kassem_MSC/AD/analysis_JUM/run_1_AD_timeseries_pvalue1/source/"
results_dir="/home/z3463471/PGNEXUS_kassem_MSC/AD/analysis_JUM/run_1_AD_timeseries_pvalue1/results/"
sampleandaccessionlists="/home/z3463471/PGNEXUS_kassem_MSC/AD/"

sample_name_list_underscore=$sampleandaccessionlists"annotated_fastqnames_replicatenumber_underscore.txt"
sample_name_list=$results_dir"annotated_fastqnames_replicatenumber_underscore.txt"

cat $sample_name_list

echo "There are" $(cat $sample_name_list | wc -l) "samples (replicates) described."

timepoint_name_list=$results_dir"timepoint_name_list.txt"

cat $timepoint_name_list

echo $(cat $timepoint_name_list | wc -l) timepoints considered.

cd $bam_bai_SJ_and_sam_files_dir

# JUM (MULTI) step 14a

## FIRST, AN R SCRIPT TO GENERATE THE COMBINATION NAMES OF THE PAIRWISE COMPARISONS BETWEEN TIMEPOINTS.

Rscript $source_dir"generatingpairwisecomparisonlist.R" $sampleandaccessionlists $results_dir $timepoint_name_list

# BACK TO BASH
## CREATING SUBDIRECTORIES FOR EACH PAIRWISE COMPARISON UNDER THE JUM_DIFF FOLDER
### Steps required: 1. create a directory for a comparison (31 in total for example), 2. COPY(small)/MOVE(large) 6 different types of relevant analysis files to the folder, 3. execute steps 14-15 in each comparison subdirectory, 4. move the common files back to the original folder, and keep/remove the uncommon files to finally, 5. repeat all the aforementioned for the next comparison until all comparisons are exhausted.

JUM_diff_dir=$bam_bai_SJ_and_sam_files_dir"JUM_diff/"

cd $JUM_diff_dir

list_of_timepoint_comparisons_final=$results_dir"list_of_timepoint_comparisons_final.txt"

for comparisonname in $(cat $list_of_timepoint_comparisons_final); do mkdir $comparisonname; done

# BACK TO R
## CREATION OF THE EXPERIMENT_DESIGN.TXT FILES FOR EACH COMPARISON

Rscript $source_dir"generatingexperiment_designfilesforeachcomparison.R" $sampleandaccessionlists $results_dir $timepoint_name_list $list_of_timepoint_comparisons_final $JUM_diff_dir

# BACK TO BASH: JUM(MULTI) step 14b and 15
# running the R script
## move the 6 file classes into their respective comparison-specific directories and run step 14

cd $JUM_diff_dir

# run the R script and JUM_B in each comparison subdirectory, and move the big *coverage.bed files back to where they came from

for comparisonname in $(cat $list_of_timepoint_comparisons_final); do cd $JUM_diff_dir; mv $(echo $comparisonname | sed -e 's/\(.*\)\(_vs_\)\(.*\)/\1*coverage.bed/g') $comparisonname"/"; cp $(echo $comparisonname | sed -e 's/\(.*\)\(_vs_\)\(.*\)/\1*combined_count.txt/g') $comparisonname"/"; mv $(echo $comparisonname | sed -e 's/\(.*\)\(_vs_\)\(.*\)/\3*coverage.bed/g') $comparisonname"/"; cp $(echo $comparisonname | sed -e 's/\(.*\)\(_vs_\)\(.*\)/\3*combined_count.txt/g') $comparisonname"/"; cp UNION_junc_coor_with_junction_ID_more_than_5_read_in_at_least_3_samples.txt $comparisonname"/"; cp more_than_5_profiled_total_AS_event_junction_first_processing_for_JUM_reference_building.txt $comparisonname"/"; cp combined_AS_JUM.gff $comparisonname"/"; cd $JUM_diff_dir$comparisonname"/"; Rscript $jum_package_dir"R_script_JUM_updated.R" experiment_design.txt > outputFile.Rout 2> errorFile.Rout; bash $jum_package_dir"JUM_B.sh" --Folder $jum_package_dir --Test pvalue --Cutoff 1 --TotalFileNum 6 --Condition1_fileNum_threshold 3 --Condition2_fileNum_threshold 3 --Condition1SampleName $(echo $comparisonname | sed -e 's/\(.*\)\(_vs_\)\(.*\)/\1_r1_,\1_r2_,\1_r3_/g') --Condition2SampleName $(echo $comparisonname | sed -e 's/\(.*\)\(_vs_\)\(.*\)/\3_r1_,\3_r2_,\3_r3_/g'); rm -rf temp_JUM_B_run_pvalue_1; mv *coverage.bed ../; done

# JUM (MULTI) step 16

for comparisonname in $(cat $list_of_timepoint_comparisons_final); do cd $JUM_diff_dir$comparisonname"/FINAL_JUM_OUTPUT_pvalue_1/"; bash $jum_package_dir"JUM_C.sh" --Folder $jum_package_dir --Test pvalue --Cutoff 1 --TotalCondition1FileNum 3 --TotalCondition2FileNum 3 --REF $refFlat_dir"refFlat.txt"; done

# CLEANUP

## deleting temp folders for each of the three main JUM steps

#rm -rf $bam_bai_SJ_and_sam_files_dir"temp_JUM_A_run"

#for comparisonname in $(cat $list_of_timepoint_comparisons_final); do cd $JUM_diff_dir$comparisonname; rm -rf temp_JUM_B_run_pvalue_1; done

#for comparisonname in $(cat $list_of_timepoint_comparisons_final); do cd $JUM_diff_dir$comparisonname"/FINAL_JUM_OUTPUT_pvalue_1/"; rm -rf temp_JUM_C_run; done

## transferring final input folders to results_dir

#for comparisonname in $(cat $list_of_timepoint_comparisons_final); do mkdir $results_dir"final_JUM_output_"$comparisonname"/"; cp $JUM_diff_dir$comparisonname"/FINAL_JUM_OUTPUT_pvalue_1/"* $results_dir"final_JUM_output_"$comparisonname"/"; done

## delete the JUM_diff folder

#rm -rf $JUM_diff_dir